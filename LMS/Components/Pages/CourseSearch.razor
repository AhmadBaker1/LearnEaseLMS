@page "/course-search/{SelectedTerm}"
@inject NavigationManager NavManager

<h2>Enter Your Search Criteria</h2>

<div class="search-container">
    <div class="search-header">
        <span>Term: @SelectedTerm</span>
    </div>
    <div class="search-body">
        <label>
            Course
            <input type="text" @bind="CourseCode" />
        </label>
        <label>
            <input type="checkbox" @bind="OnlyShowAvailable" />
            Available Seats
        </label>
    </div>
    <div class="search-actions">
        <button @onclick="SearchCourses">Search</button>
        <button @onclick="ClearSearch">Clear</button>
    </div>
    
    @if (TeachersInformation != null && TeachersInformation.Any())
    {
        <div>
            <h3>Teachers' Information</h3>
            @foreach (var teacher in TeachersInformation)
            {
                <div style="display: flex; align-items: center; justify-content: space-between; margin-bottom: 10px;">
                    <div>
                        <h2 style="font-weight: bold;">Block @teacher.Block</h2>
                        <p>@teacher.Name</p>
                        <p>Email: @teacher.Email</p>
                        <p>Average Rating: @teacher.AverageRating</p>
                        <p>Teaching: @teacher.CourseName</p>
                    </div>
                    <button @onclick="() => AddTeacher(teacher)">Add to Course</button>
                </div>
                <hr />
            }
        </div>
    }

</div>

@code {
    [Parameter]
    public string SelectedTerm { get; set; }

    private string CourseCode { get; set; }
    private bool OnlyShowAvailable { get; set; }
    private List<Teacher> TeachersInformation { get; set; }

    private void AddTeacher(Teacher teacher)
    {
        NavManager.NavigateTo($"/Registration?selectedCourse={teacher.CourseName}");
    }

    private void SearchCourses()
    {
        // Clear any existing information
        TeachersInformation = null;

        if (!string.IsNullOrWhiteSpace(CourseCode) && CourseCode.ToLower().Contains("oop"))
        {
            // Populate the list with teachers' information for OOP course, assigning them to blocks
            TeachersInformation = new List<Teacher>
            {
                new Teacher { Name = "Ms. Johnson", Email = "ms.johnson@gmail.com", AverageRating = 4.7, CourseName = "Object-Oriented Programming (OOP2)", Block = "A" },
                new Teacher { Name = "Mrs. Brown", Email = "mrs.brown@gmail.com", AverageRating = 4.5, CourseName = "Object-Oriented Programming (OOP2)", Block = "B" },
                new Teacher { Name = "Mr. Jones", Email = "mr.jones@gmail.com", AverageRating = 4.8, CourseName = "Object-Oriented Programming (OOP2)", Block = "C" },
                new Teacher { Name = "Ms. Miller", Email = "ms.miller@gmail.com", AverageRating = 4.4, CourseName = "Object-Oriented Programming (OOP2)", Block = "D" }
                // Add additional teachers as needed
            };
        }
        else if (CourseCode.ToLower().Equals("cpsy-202"))
        {
            // Populate the list with teachers' information for CPSY-202 course, assigning them to blocks
            TeachersInformation = new List<Teacher>
                {
                    new Teacher { Name = "Ms. Sadaf", Email = "ms.Sadaf@gmail.com", AverageRating = 4.7, CourseName = "User Experience and Design (CPSY-202)", Block = "A" },
                    new Teacher { Name = "Mrs. Abdur", Email = "mrs.Abdur@gmail.com", AverageRating = 4.5, CourseName = "User Experience and Design (CPSY-202)", Block = "B" },
                    new Teacher { Name = "Mr. Ramin", Email = "mr.Ramin@gmail.com", AverageRating = 4.8, CourseName = "User Experience and Design (CPSY-202)", Block = "C" },
                    new Teacher { Name = "Ms. Ahmad", Email = "ms.Ahmad@gmail.com", AverageRating = 4.4, CourseName = "User Experience and Design (CPSY-202)", Block = "D" }
                };

        }
        else if (CourseCode.ToLower().Equals("cprg-250"))
        {
            // Populate the list with teachers' information for CPRG-250 course, assigning them to blocks
            TeachersInformation = new List<Teacher>
                {
                    new Teacher { Name = "Ms. Ali", Email = "ms.johnson@gmail.com", AverageRating = 4.7, CourseName = "Database Design and Programming (CPRG-250)", Block = "A" },
                    new Teacher { Name = "Mrs. Karam", Email = "mrs.brown@gmail.com", AverageRating = 4.5, CourseName = "Database Design and Programming (CPRG-250)", Block = "B" },
                    new Teacher { Name = "Mr. Jones", Email = "mr.jones@gmail.com", AverageRating = 4.8, CourseName = "Database Design and Programming (CPRG-250)", Block = "C" },
                    new Teacher { Name = "Ms. Miller", Email = "ms.miller@gmail.com", AverageRating = 4.4, CourseName = "Database Design and Programming (CPRG-250)", Block = "D" }
                };
        }

        else if (CourseCode.ToLower().Equals("phil-241"))
        {
            // Populate the list with teachers' information for CPRG-250 course, assigning them to blocks
            TeachersInformation = new List<Teacher>
                {
                    new Teacher { Name = "Ms. Johnson", Email = "ms.johnson@gmail.com", AverageRating = 4.7, CourseName = "Critical Thinking (PHIL-241)", Block = "A" },
                    new Teacher { Name = "Mrs. Brown", Email = "mrs.brown@gmail.com", AverageRating = 4.5, CourseName = "Critical Thinking (PHIL-241)", Block = "B" },
                    new Teacher { Name = "Mr. Jones", Email = "mr.jones@gmail.com", AverageRating = 4.8, CourseName = "Critical Thinking (PHIL-241)", Block = "C" },
                    new Teacher { Name = "Ms. Miller", Email = "ms.miller@gmail.com", AverageRating = 4.4, CourseName = "Critical Thinking (PHIL-241)", Block = "D" }
                };
        }
        else if (CourseCode.ToLower().Equals("cpsy-200"))
        {
            // Populate the list with teachers' information for CPRG-250 course, assigning them to blocks
            TeachersInformation = new List<Teacher>
                {
                    new Teacher { Name = "Ms. Johnson", Email = "ms.johnson@gmail.com", AverageRating = 4.7, CourseName = "Software Analysis and Design (CPSY-200)", Block = "A" },
                    new Teacher { Name = "Mrs. Brown", Email = "mrs.brown@gmail.com", AverageRating = 4.5, CourseName = "Software Analysis and Design (CPSY-200)", Block = "B" },
                    new Teacher { Name = "Mr. Jones", Email = "mr.jones@gmail.com", AverageRating = 4.8, CourseName = "Software Analysis and Design (CPSY-200)", Block = "C" },
                    new Teacher { Name = "Ms. Miller", Email = "ms.miller@gmail.com", AverageRating = 4.4, CourseName = "Software Analysis and Design (CPSY-200)", Block = "D" }
                };
        }
    }

    private void ClearSearch()
    {
        CourseCode = string.Empty;
        OnlyShowAvailable = false;
        TeachersInformation = null;
    }

    private class Teacher
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public double AverageRating { get; set; }
        public string CourseName { get; set; }
        public string Block { get; set; } // Added block property
    }
}

<style>
    /* Styles unchanged */
</style>


<style>
    .search-container {
        max-width: 600px;
        margin: 20px auto;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .search-header {
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 1px solid #eee;
    }

    .search-body label {
        display: block;
        margin: 10px 0;
    }

    .search-body input[type="text"] {
        width: calc(100% - 20px);
        padding: 8px 10px;
        margin-top: 5px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .search-body input[type="checkbox"] {
        margin-right: 5px;
    }

    .search-actions button {
        padding: 10px 20px;
        margin-right: 10px;
        border: 1px solid #007bff;
        background-color: #007bff;
        color: white;
        border-radius: 4px;
        cursor: pointer;
    }

    .search-actions button:hover {
        background-color: #0056b3;
    }
</style>